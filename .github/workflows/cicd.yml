name: CI checks + deployment

on:
  pull_request:
    branches:
        - production
        - test
  push:
    branches: 
        - production
        - test
        - 'feat/**'

jobs:
  install-tools:
    name: Install tools
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Set up Aftman
        uses: ok-nick/setup-aftman@v0.4.2
      - name: Cache Aftman tools
        uses: actions/cache@v3
        with:
          path: ~/.aftman
          key: aftman-${{ hashFiles('aftman.toml') }}
      - name: Install Wally dependencies
        run: wally install
      - name: Cache Wally Packages folder
        uses: actions/cache@v3
        with:
          path: Packages
          key: packages-${{ hashFiles('wally.lock') }}

  luau-tests:
    name: Run Luau tests via Open Cloud
    runs-on: ubuntu-latest
    needs: [install-tools]
    concurrency:
      group: luau-execution
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Restore cached Aftman tools
        uses: actions/cache@v3
        with:
          path: ~/.aftman
          key: aftman-${{ hashFiles('aftman.toml') }}
      - name: Restore Wally cache
        uses: actions/cache@v3
        with:
          path: Packages
          key: packages-${{ hashFiles('wally.lock') }}
      - name: Make test.sh executable
        run: chmod +x ./scripts/shell/test.sh
      - name: Run tests
        run: ./scripts/shell/test.sh test.project.json $TEST_TASK_FILE | tee test_output.log
        env:
          ROBLOX_API_KEY: ${{ secrets.TESTKEY }}
          ROBLOX_UNIVERSE_ID: ${{ vars.ROBLOX_TEST_UNIVERSE_ID }}
          ROBLOX_PLACE_ID: ${{ vars.ROBLOX_TEST_PLACE_ID }}
          TEST_TASK_FILE: tasks/runTests.luau
      - name: Extract test JSON
        id: extract_json
        run: |
          OUTPUT=$(grep "::TEST_JSON::" test_output.log | sed 's/.*::TEST_JSON:://')
          echo "$OUTPUT" > test-results.json
          echo "json_output=$OUTPUT" >> $GITHUB_OUTPUT
      - name: Convert test results to JUnit XML
        run: python3 ./scripts/shell/python/convert_to_junit.py test-results.json test-results.xml
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: roblox-test-results
          path: |
            test-results.json
            test-results.xml
      - name: Summarize test results
        run: |
          # Adjust the path to handle the nested structure
          PASSED=$(jq '[.planNode.children[].children[].children[].children[].children[] | select(.type == "It" and .status == "Success")] | length' test-results.json)
          FAILED=$(jq '[.planNode.children[].children[].children[].children[].children[] | select(.type == "It" and .status == "Failure")] | length' test-results.json)
          TOTAL=$(jq '[.planNode.children[].children[].children[].children[].children[] | select(.type == "It")] | length' test-results.json)

          echo "## Roblox TestEZ Results ✅❌" >> $GITHUB_STEP_SUMMARY
          echo "**Total:** $TOTAL" >> $GITHUB_STEP_SUMMARY
          echo "**Passed:** $PASSED" >> $GITHUB_STEP_SUMMARY
          echo "**Failed:** $FAILED" >> $GITHUB_STEP_SUMMARY

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [install-tools, luau-tests]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/production' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.3.0
      - name: Set up Aftman
        uses: ok-nick/setup-aftman@v0.4.2
      - name: Restore cached Aftman tools
        uses: actions/cache@v3
        with:
          path: ~/.aftman
          key: aftman-${{ hashFiles('aftman.toml') }}
      - name: Upload production build
        run: $HOME/.aftman/bin/rojo upload default.project.json --api_key ${{ secrets.DEPLOYKEY }} --universe_id ${{ vars.ROBLOX_PRODUCTION_UNIVERSE_ID }} --asset_id ${{ vars.ROBLOX_PRODUCTION_PLACE_ID }}
